// <auto-generated />
using System;
using AdvancedCqrs.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdvancedCqrs.SqlServer.Migrations
{
    [DbContext(typeof(AdvancedCqrsDbContext))]
    [Migration("20211114103600_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AdvancedCqrs")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdvancedCqrs.SqlServer.Entities.ThingData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Thing");
                });

            modelBuilder.Entity("Brickweave.Cqrs.SqlServer.Entities.CommandQueueData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaimsPrincipalJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommandTypeName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Completed")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("Completed");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResultJson")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ResultJson");

                    b.Property<string>("ResultTypeName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ResultTypeName");

                    b.Property<DateTime?>("Started")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("Started");

                    b.HasKey("Id");

                    b.ToTable("CommandQueue");
                });

            modelBuilder.Entity("Brickweave.Cqrs.SqlServer.Entities.CommandStatusData", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Completed")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("Completed");

                    b.Property<string>("ResultJson")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ResultJson");

                    b.Property<string>("ResultTypeName")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("ResultTypeName");

                    b.Property<DateTime?>("Started")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("datetime2")
                        .HasColumnName("Started");

                    b.HasKey("Id");

                    b.ToTable("CommandQueue");
                });

            modelBuilder.Entity("Brickweave.Cqrs.SqlServer.Entities.CommandStatusData", b =>
                {
                    b.HasOne("Brickweave.Cqrs.SqlServer.Entities.CommandQueueData", "CommandQueue")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommandQueue");
                });
#pragma warning restore 612, 618
        }
    }
}
